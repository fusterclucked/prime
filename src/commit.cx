#include <fcntl.h>
#include <fts.h>
#include <sys/stat.h>
#include <unistd.h>

#include "lib.h"

#include "db.h"
#include "wd.h"

@prime_commit: bool (prime_error_t* error)

	success: bool = false
	db: prime_db_t
	wd: prime_wd_t

	unless prime_db_open (&db, 0, error)
		goto done

	unless prime_wd_open (&wd, error)
		goto done

	entry: FTSENT*
	file: int = -1

	while prime_wd_read (&wd, &entry, error) and entry

		path: char* = entry->fts_path
		key: struct MDB_val = { .mv_size = strlen (path), .mv_data = path }
		data: struct MDB_val = { .mv_size = entry->fts_statp->st_size }

		if errno = mdb_put (db.txn, db.dbi, &key, &data, MDB_RESERVE)
			error->site = "allocate storage"
			goto done

		if 0 > (file = open (entry->fts_name, O_RDONLY))
			error->site = "open file"
			goto done

		if 0 > read (file, data.mv_data, data.mv_size)
			error->site = "copy file contents"
			goto done

		if 0 > close (file)
			error->site = "close file"
			goto done

	if errno = mdb_txn_commit (db.txn)
		error->site = "commit transaction"
		goto done

	success = true

done:
	close file
	prime_wd_close &wd
	prime_db_close &db
	return success
